package {	import flash.display.MovieClip;	import flash.display.StageAlign;    import flash.display.StageScaleMode;	import flash.xml.XMLDocument;	import flash.xml.XMLNode;	import flash.events.*;	import flash.utils.*;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.system.Security;	import flash.external.ExternalInterface;	import flash.system.Security;	//import flash.system.System;	import FlxerGallery.core.FlxerGallery;	import FlxerGallery.comp.Alt;		import com.google.analytics.AnalyticsTracker; 	import com.google.analytics.GATracker; 	public class Starter extends MovieClip {		public var myFlxerGallery;		var cnt;		var myLoader;		var c;		var mySL;		public var home;		public var tracker:AnalyticsTracker		public var myAlt;		public function Starter() {			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			Security.allowDomain("*");			c = setInterval(controlla, 100);		}				function controlla() {			if (stage.stageHeight > 0) {				clearInterval(c);				if (stage.stageHeight > 100) {					starterDue();				} else {					starterTre();				}			}		}		function starterTre() {			this.mySL  = new Button();			this.mySL.y = -8;			this.mySL.scaleX = this.mySL.scaleY = 2;			this.addChild(mySL);			mySL.avvia({fnzOut:starterTreAct,alt:"",txt:Preferences.pref.lab[Preferences.pref.lng].ssLabel});		}		function starterTreAct(a) {			this.removeChild(mySL);			stage.displayState = "fullScreen";			starterDue();		}		function starterDue() {			Preferences.createPref(stage.stageWidth,stage.stageHeight);			Preferences.pref.flashvar = root.loaderInfo.parameters			for (var keyStr:String in Preferences.pref.flashvar) {				var val = String(Preferences.pref.flashvar[keyStr]);				val = Preferences.myReplace(val, "#", "0x");				if (val == parseFloat(val).toString()) {					val = parseFloat(val);				} else if (val == "true") {					val = true;				} if (val == "false") {					val = false;				}				Preferences.pref[keyStr] = val;			}			if (Preferences.pref.file && !Preferences.pref.cnt) {				Preferences.pref.cnt = Preferences.pref.flashvar.file;			}			this.avviaJs(Preferences.pref.cnt,Preferences.pref.tit);			//			try {				if (ExternalInterface.available) {					ExternalInterface.addCallback("avviaJs",avviaJs);					ExternalInterface.addCallback("mbuto",mbuto);				}			}			catch (error) {				trace(error);			}		}		public function mbuto(cnt) {			myFlxerGallery.myMonitor.mbuto(cnt);		}		public function avviaJs(cnt,tit) {			if (!tit) tit = "Untitled";			// TEST LOCALE			if (!cnt) {				// single				// single foto				// single flv				// single swf user				// multifoto + video				// mp3				// multifoto + video				// multi swf				// solo video avm1				// solo video avm2				// multifoto + video				// multifoto				cnt = "gallery/myMedia.xml";				cnt = "http://dev.flxer.net/_php/showVideo/phpNr1wyO.flv";				cnt = "http://www.liveperformersmeeting.net/2008/en/gallery/gallDettXml_348.xml";				cnt = "http://www.liveperformersmeeting.net/2010/en/gallery/galleryXml.php?id=277";				cnt = "http://www.electrode.it/_gallery/video/mickwills_2.flv";				cnt = "http://www.flxer.net/warehouse/_flxer/library/koncepts/contemporanea.txt";				cnt = "http://www.flxer.net/_fp/fpGallery.php?id=p8022";				cnt = "http://thc.flyer.it/rebrand/Agency_45_SUB.mov";			}						//cnt = Preferences.myReplace(cnt, "&amp;", "&");			Preferences.updatePref(cnt,tit)			var tmp = cnt.split(",");			var file = tmp[0];			var ext = file.substring(file.length-3, file.length).toLowerCase();			var tit = (Preferences.pref.tit ? Preferences.pref.tit : (tmp[1] ? tmp[1] : ""));			var pageUrl = (Preferences.pref.pageUrl ? Preferences.pref.pageUrl : (tmp[2] ? tmp[2] : ""));			home = new XMLDocument();			home.ignoreWhite = true;			if (ext == "mp3" || ext == "mp4" || ext == "mov" || ext == "avi" || ext == "mpg" || ext == "m4v" || ext == "flv" || ext == "swf" || ext == "jpg" || ext == "png" || ext == "gif" || ext == "txt") {				home.parseXML("<root autostop=\"false\"><item"+(pageUrl ? " page_url=\""+pageUrl+"\"" : "")+"><file>"+file+"</file><data><tit>"+tit+"</tit></data><thumb>"+Preferences.pref.thumbnail+"</thumb></item></root>");				Preferences.pref.myFileList = home;				avviaMyFlxerGallery();			} else {				myLoader = new URLLoader(new URLRequest(cnt));				myLoader.addEventListener("complete", xmlOk);				myLoader.addEventListener("ioError", loadErr);			}		}		// PREFERENZE		function loadErr(event) {			try {				if (ExternalInterface.available) {					ExternalInterface.call("alert", "Error loading content.");				}			}			catch (error) {				navigateToURL(new URLRequest("javascript:alert('Error loading content.')"));			}		}		public function restart() {			this.removeChild(myFlxerGallery);			myFlxerGallery = null			starterTre()		}		function avviaMyFlxerGallery() {			Preferences.updateCol();						this.myFlxerGallery  = new FlxerGallery();			this.addChild(myFlxerGallery)			this.myAlt  = new Alt();			this.addChild(myAlt);			Preferences.pref.myAlt = myAlt;			this.myFlxerGallery.avvia();			if (Preferences.pref.policyFile) {				trace("Preferences.pref.policyFile"+Preferences.pref.policyFile);				Security.loadPolicyFile(Preferences.pref.policyFile);			}			if (Preferences.pref.trackID) {				tracker = new GATracker(this, Preferences.pref.trackID, "AS3", false ); 				if (Preferences.pref.isEmbed) {					trace("Preferences.pref.trackPageview"+Preferences.pref.trackPageview)					tracker.trackPageview(Preferences.pref.trackPageview);				}			}		}		function xmlOk(event) {			home.parseXML(myLoader.data);			if (event.type == "complete") {				for (var a = 0; a<home.childNodes[0].childNodes.length; a++) {					home.childNodes[0].childNodes[a].childNodes[0].childNodes[0].nodeValue = home.childNodes[0].childNodes[a].childNodes[0].childNodes[0].toString();					home.childNodes[0].childNodes[a].childNodes[2].childNodes[0].nodeValue = home.childNodes[0].childNodes[a].childNodes[2].childNodes[0].toString();				}				Preferences.pref.myFileList = home;				Preferences.pref.tit = Preferences.pref.myFileList.childNodes[0].childNodes[0].childNodes[1].childNodes[0].childNodes[0].toString();				Preferences.pref.thumbnail = Preferences.pref.myFileList.childNodes[0].childNodes[0].childNodes[2].childNodes[0].toString().split("?")[0];				for (var item in home.childNodes[0].attributes) {					var val = home.childNodes[0].attributes[item].toString();					val = Preferences.myReplace(val, "#", "0x");					if (val == parseFloat(val).toString()) {						val = parseFloat(val);					} else if (val == "true") {						val = true;					} if (val == "false") {						val = false;					}					Preferences.pref[item] = val;					trace("NEW "+item+" "+Preferences.pref[item])				}				//Preferences.pref.thumbSaver = true;				avviaMyFlxerGallery()			} else {				loadErr("xmlLoadError");/**/			}		}	}}