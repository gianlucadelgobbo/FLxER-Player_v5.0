package {	import flash.text.TextFormat;	import flash.text.StyleSheet;	import flash.text.Font;	public class Preferences {		public static var pref;		public function Preferences() {		}		public static function customizePref(p) {			pref = p;		}		public static function updateCol() {			trace("updateColupdateColupdateCol"+pref.myFont)			pref.tsHtml = new StyleSheet();			pref.tsHtml.setStyle("p",{fontFamily:pref.myFont, fontSize:'8px', color:myReplace(pref.txtCol, "0x", "#"), marginLeft:'3px'});			pref.tsHtml.setStyle("a:link",{color:myReplace(pref.txtCol, "0x", "#")});			pref.tsHtml.setStyle("a:visited",{color:myReplace(pref.txtCol, "0x", "#")});			pref.tsHtml.setStyle("a:active",{color:myReplace(pref.txtCol, "0x", "#")});			pref.tsHtml.setStyle("a:hover",{color:myReplace(pref.txtColOver, "0x", "#")});			pref.tsHtml.setStyle("div",{display:"block",color:"#666666"});			pref.ts = new TextFormat();			pref.ts.font = pref.myFont;		}		public static function createPref(ww,hh) {			pref.w = ww;			pref.h = hh;			var embeddedFontsArray:Array = Font.enumerateFonts(false);			embeddedFontsArray.sortOn("fontName");			/*			for (var a in embeddedFontsArray) {				trace(a + " " + embeddedFontsArray[a].fontName);			}			*/			pref.ts = new TextFormat();			with (pref.ts) {				font = embeddedFontsArray[1].fontName;				size = 8;				color = 0x000000;				leading = -2;				leftMargin = 1;				rightMargin = 0;			}			pref.th = new TextFormat();			with (pref.th) {				font = embeddedFontsArray[0].fontName;				size = 8;				color = 0x000000;				leading = -2;				leftMargin = 1;				rightMargin = 0;			}		}		public static function updatePref(cnt,tit) {			pref.flashvar.cnt = pref.cnt = cnt;			pref.flashvar.tit = pref.tit = tit;			//pref.isEmbed = false;			pref.trackPageview = pref.trackPageviewPrefix+cnt;			trace("updatePref cnt: "+pref.cnt)			trace("updatePref tit: "+pref.tit)			trace("updatePref trackPageview: "+pref.trackPageview)		}		public static function myReplace(str, search, replace) {			var temparray = str.split(search);			str = temparray.join(replace);			return str;		}	}}